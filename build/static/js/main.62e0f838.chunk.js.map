{"version":3,"sources":["redux/modules/game/actionTypes.js","redux/modules/game/reducer.js","redux/modules/game/index.js","redux/modules/index.js","redux/store.js","constants/game.js","components/Game/Cell/Cell.js","components/Game/Board/Field/Field.js","components/Game/Board/LabelScreen/LabelScreen.js","redux/modules/game/actions.js","components/Game/CellsBackYard/CellsBackYard.js","components/Game/Board/Board.js","utils/matrix.js","components/Game/NextBar/NextFigure/NextFigure.js","components/Game/NextBar/NextBar.js","components/Game/ScoreBar/ScoreBar.js","components/Game/GameTimer/GameTimer.js","components/Game/Game.js","components/Root/Root.js","index.js","serviceWorker.js","components/Game/GameTimer/styles.module.scss","components/Game/ScoreBar/styles.module.scss","components/Game/Board/styles.module.scss","components/Game/NextBar/styles.module.scss","components/Game/Board/LabelScreen/styles.module.scss","components/Game/NextBar/NextFigure/styles.module.scss","components/Game/styles.module.scss","components/Game/Board/Field/styles.module.scss","components/Game/Cell/styles.module.scss"],"names":["SET_GAME_STATE","initialState","Immutable","inGame","showIntro","pause","gameOver","score","cells","newRecord","reducer","state","arguments","length","undefined","action","type","combineReducers","game","configureStore","middleware","thunk","composedEnhancers","compose","apply","applyMiddleware","concat","createStore","rootReducer","TICK_TIME","FIELD_WIDTH","FIELD_HEIGHT","SHUFFLE_SETS_COUNT","KEY_DOWN_REPEAT_TIME","FIGURES","I","matrix","centerOffset","J","L","O","S","T","Z","DIRECTION","UP","RIGHT","DOWN","LEFT","Cell","_cn","cellClassName","_this$props","this","props","x","y","figure","ghost","current","baked","odd","styles","get","figureI","figureJ","figureL","figureO","figureS","figureT","figureZ","blankCell","react_default","a","createElement","className","cn","cell","Object","defineProperty","bakedCell","style","left","top","width","height","React","Component","defaultProps","Field","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","value","resultCells","forEach","row","matrixValue","push","Cell_Cell","getIn","field","renderBackedCells","renderGhost","renderCurrent","connect","ownProps","LabelScreen","active","label","blink","screen","generateBlankField","setIn","cleanCells","isDirtyCompare","map","fillNextList","nextList","figuresSet","i","toConsumableArray","keySeq","toArray","shuffle","figureKey","getNewCurrent","size","nextListItem","slice","offset","id","shortId","generate","getGhost","isOk","attemptGhostCurrent","ghostCurrent","testCurrentToCrash","result","checkRecord","personalRecord","localStorage","setItem","set","CellsBackYard","Fragment","IntroScreen","_ref","LabelScreen_LabelScreen","fontSize","color","cool","marginBottom","spaceButton","Board","_getPrototypeOf2","_this","_len","args","Array","_key","call","doGameTick","_ref2","_ref2$doNotRepeat","skip","doNotRepeat","clearGameTickTimeout","gameTick","gameTickTimeoutId","setTimeout","handlePressSpace","e","restartGame","pauseGame","freezeSpaceButton","forceDrop","handlePressEsc","_this$props2","handleKeyDownDown","keyDownPressed","keyDownPressIntervalId","setInterval","handleKeyDownUp","clearInterval","clearTimeout","_this2","moveCurrent","keyboardListener","window","keypress","Listener","register_many","keys","is_exclusive","on_keydown","prevent_repeat","repeatKeyRight","createRepeat","delay","firstTimeDelay","KEY_REPEAT_TIME","start","on_keyup","stop","repeatKeyLeft","reset","prevProps","prevState","snapshot","_this3","totalAdded","_this$props3","timeOver","boardWidth","boardHeight","board","CellsBackYard_CellsBackYard","Board_Field_Field","Board_IntroScreen","_getNewCurrent","_getNewCurrent2","slicedToArray","getItem","_ref$forceDrop","dispatch","getState","newCurrent","addCurrentToCells","_processCompletedRows","completedRowsCount","fullRow","processCompletedRows","_processCompletedRows2","updatedCells","_getNewCurrent3","_getNewCurrent4","direction","reverse","turnOverMatrix","NextFigure","nextItemKey","Math","min","getContainerHeight","getContainerWidth","container","paddingTop","inner","renderCells","NextBar","visible","bar","title","figures","NextFigure_NextFigure","ScoreBar","dist_index_esm","flashDuration","compare","nextProps","superFlashScore","flashScore","GameTimer","time","timerId","tick","setState","setTimeOver","restartTimer","resume","_cn2","widthPercent","timerBar","tracker","okTracker","warningTracker","dangerTracker","noTracker","Game","Game_Board_Board","Game_NextBar_NextBar","Game_ScoreBar_ScoreBar","Game_GameTimer_GameTimer","Root","store","react_redux_es","components_Game_Game","target","document","querySelector","ReactDOM","render","Root_Root","navigator","serviceWorker","ready","then","registration","unregister","module","exports","flashScoreAnimation","superFlashScoreAnimation","logoAnimation","spaceButtonAnimation","screenAppear"],"mappings":"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","file":"static/js/main.62e0f838.chunk.js","sourcesContent":["export const SET_GAME_STATE = 'app/game/SET_GAME_STATE';\n","import * as Immutable from 'immutable';\nimport { SET_GAME_STATE } from './actionTypes';\n\nconst initialState = new Immutable.Map({\n    inGame: false,\n    showIntro: true,\n    pause: false,\n    gameOver: false,\n    score: null,\n    cells: null,\n    newRecord: false,\n});\n\nexport default function reducer(state = initialState, action = {}) {\n    switch (action.type) {\n        case SET_GAME_STATE: {\n            return action.state;\n        }\n        default:\n            return state;\n    }\n}\n","import reducer from './reducer';\n\nexport default reducer;\n","import { combineReducers } from 'redux';\n\nimport game from './game';\n\nexport default combineReducers({\n    game,\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './modules';\n\nconst configureStore = () => {\n    const initialState = {};\n    const enhancers = [];\n    const middleware = [thunk];\n\n    if (process.env.NODE_ENV !== 'production') {\n        const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\n\n        if (typeof devToolsExtension === 'function') {\n            enhancers.push(devToolsExtension());\n        }\n    }\n\n    const composedEnhancers = compose(\n        applyMiddleware(...middleware),\n        ...enhancers,\n    );\n\n    const store = createStore(rootReducer, initialState, composedEnhancers);\n\n    if (process.env.NODE_ENV !== 'production') {\n        if (module.hot) {\n            module.hot.accept('./modules', () => {\n                store.replaceReducer(rootReducer);\n            });\n        }\n    }\n\n    return store;\n};\n\nexport default configureStore;\n","import * as Immutable from 'immutable';\n\nexport const GAME_TIME = 60 * 5 * 1000;\n// export const GAME_TIME = 60 * 2 * 1000;\n// export const GAME_TIME = 5* 1000;\nexport const TICK_TIME = 500;\n\nexport const CELL_SIZE_PX = 20;\nexport const CELL_MARGIN_PX = 1;\n\nexport const FIELD_WIDTH = 10;\nexport const FIELD_HEIGHT = 21;\n\n// The number of complete sets of shapes\nexport const SHUFFLE_SETS_COUNT = 3;\n\nexport const KEY_REPEAT_TIME = 100;\nexport const KEY_DOWN_REPEAT_TIME = 30;\n\nexport const FIGURES = Immutable.fromJS({\n    I: {\n        // prettier-ignore\n        matrix: [\n            [0,0,0,0],\n            [1,1,1,1],\n            [0,0,0,0],\n            [0,0,0,0],\n        ],\n        centerOffset: [-1, -2],\n    },\n    J: {\n        // prettier-ignore\n        matrix: [\n            [1,0,0],\n            [1,1,1],\n            [0,0,0]\n        ],\n        centerOffset: [0, -1],\n    },\n    L: {\n        // prettier-ignore\n        matrix: [\n            [0,0,1],\n            [1,1,1],\n            [0,0,0]\n        ],\n        centerOffset: [0, -1],\n    },\n    O: {\n        // prettier-ignore\n        matrix: [\n            [1,1],\n            [1,1],\n        ],\n        centerOffset: [0, 0],\n    },\n    S: {\n        // prettier-ignore\n        matrix: [\n            [0,1,1],\n            [1,1,0],\n            [0,0,0]\n        ],\n        centerOffset: [0, -1],\n    },\n    T: {\n        // prettier-ignore\n        matrix: [\n            [0,1,0],\n            [1,1,1],\n            [0,0,0]\n        ],\n        centerOffset: [0, -1],\n    },\n    Z: {\n        // prettier-ignore\n        matrix: [\n            [1,1,0],\n            [0,1,1],\n            [0,0,0]\n        ],\n        centerOffset: [0, -1],\n    },\n});\n\nexport const DIRECTION = {\n    UP: 0,\n    RIGHT: 1,\n    DOWN: 2,\n    LEFT: 3,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'clsx';\nimport styles from './styles.module.scss';\nimport { CELL_SIZE_PX, FIGURES } from '../../../constants/game';\n\nexport default class Cell extends React.Component {\n    static propTypes = {\n        figure: PropTypes.object,\n        current: PropTypes.bool,\n        baked: PropTypes.bool,\n        ghost: PropTypes.bool,\n        odd: PropTypes.bool,\n        x: PropTypes.number.isRequired,\n        y: PropTypes.number.isRequired,\n    };\n\n    static defaultProps = {\n        figure: null,\n    };\n\n    render() {\n        const { x, y, figure, ghost, current, baked, odd } = this.props;\n\n        let cellClassName;\n\n        if (ghost) {\n            cellClassName = styles.ghost;\n        } else {\n            switch (figure) {\n                case FIGURES.get('I'): {\n                    cellClassName = styles.figureI;\n                    break;\n                }\n                case FIGURES.get('J'): {\n                    cellClassName = styles.figureJ;\n                    break;\n                }\n                case FIGURES.get('L'): {\n                    cellClassName = styles.figureL;\n                    break;\n                }\n                case FIGURES.get('O'): {\n                    cellClassName = styles.figureO;\n                    break;\n                }\n                case FIGURES.get('S'): {\n                    cellClassName = styles.figureS;\n                    break;\n                }\n                case FIGURES.get('T'): {\n                    cellClassName = styles.figureT;\n                    break;\n                }\n                case FIGURES.get('Z'): {\n                    cellClassName = styles.figureZ;\n                    break;\n                }\n                default:\n                    cellClassName = styles.blankCell;\n            }\n        }\n\n        return (\n            <div\n                className={cn(\n                    styles.cell,\n                    cellClassName,\n                    {\n                        [styles.ghost]: ghost,\n                        [styles.current]: current,\n                        [styles.bakedCell]: baked,\n                    },\n                    { [styles.odd]: odd },\n                )}\n                style={{\n                    left: x * CELL_SIZE_PX,\n                    top: y * CELL_SIZE_PX,\n                    width: CELL_SIZE_PX,\n                    height: CELL_SIZE_PX,\n                }}\n            />\n        );\n    }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Cell from '../../Cell/Cell';\nimport styles from './styles.module.scss';\nimport { FIELD_HEIGHT, FIELD_WIDTH } from '../../../../constants/game';\n\nexport class Field extends React.Component {\n    renderGhost() {\n        const { ghost } = this.props;\n\n        const resultCells = [];\n        ghost.get('matrix').forEach((row, y) => {\n            row.forEach((matrixValue, x) => {\n                if (matrixValue) {\n                    resultCells.push(\n                        <Cell\n                            figure={ghost.get('figure')}\n                            ghost\n                            x={x + ghost.getIn(['offset', 'x'])}\n                            y={y + ghost.getIn(['offset', 'y'])}\n                            key={`GHOST_${y}_${x}`}\n                        />,\n                    );\n                }\n            });\n        });\n\n        return resultCells;\n    }\n\n    renderCurrent() {\n        const { current } = this.props;\n        const resultCells = [];\n        current.get('matrix').forEach((row, y) => {\n            row.forEach((matrixValue, x) => {\n                if (matrixValue) {\n                    resultCells.push(\n                        <Cell\n                            figure={current.get('figure')}\n                            current\n                            x={x + current.getIn(['offset', 'x'])}\n                            y={y + current.getIn(['offset', 'y'])}\n                            key={`${current.get('id')}_${y}_${x}`}\n                        />,\n                    );\n                }\n            });\n        });\n\n        return resultCells;\n    }\n\n    renderBackedCells() {\n        const { cells } = this.props;\n        const resultCells = [];\n        for (let y = 0; y < FIELD_HEIGHT; y += 1) {\n            for (let x = 0; x < FIELD_WIDTH; x += 1) {\n                if (cells.getIn([y, x, 'figure'])) {\n                    resultCells.push(\n                        <Cell\n                            figure={cells.getIn([y, x, 'figure'])}\n                            baked\n                            x={x}\n                            y={y}\n                            key={cells.getIn([y, x, 'id'])}\n                        />,\n                    );\n                }\n            }\n        }\n\n        return resultCells;\n    }\n\n    render() {\n        return (\n            <div className={styles.field}>\n                {this.renderBackedCells()}\n                {this.renderGhost()}\n                {this.renderCurrent()}\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        cells: state.game.get('cells'),\n        current: state.game.get('current'),\n        ghost: state.game.get('ghost'),\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    {},\n)(Field);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'clsx';\nimport styles from './styles.module.scss';\n\nexport default class LabelScreen extends React.Component {\n    static propTypes = {\n        active: PropTypes.bool.isRequired,\n        label: PropTypes.node.isRequired,\n        blink: PropTypes.bool,\n    };\n\n    render() {\n        const { active, label, blink } = this.props;\n        if (!active) {\n            return null;\n        }\n\n        return (\n            <div className={styles.screen}>\n                <div className={cn(styles.label, { [styles.blink]: blink })}>{label}</div>\n            </div>\n        );\n    }\n}\n","import * as Immutable from 'immutable';\nimport shortId from 'shortid';\nimport shuffle from 'lodash/shuffle';\nimport { SET_GAME_STATE } from './actionTypes';\nimport { DIRECTION, FIELD_HEIGHT, FIELD_WIDTH, FIGURES, SHUFFLE_SETS_COUNT } from '../../../constants/game';\nimport { turnOverMatrix } from '../../../utils/matrix';\n\nconst blankCell = new Immutable.Map({\n    figure: null,\n});\n\n/**\n * Сгенерировать пустое поле\n * @returns {List}\n */\nfunction generateBlankField() {\n    let cells = new Immutable.Map();\n    for (let y = 0; y < FIELD_HEIGHT; y += 1) {\n        for (let x = 0; x < FIELD_WIDTH; x += 1) {\n            cells = cells.setIn([y, x], blankCell);\n        }\n    }\n    return cells;\n}\n\n/**\n * Убрать с поля клетки по результату ф-ии isDirtyCompare\n * @param cells\n * @param isDirtyCompare\n * @returns {*}\n */\nfunction cleanCells(cells, isDirtyCompare) {\n    return cells.map(row =>\n        row.map(cell => {\n            if (isDirtyCompare(cell)) {\n                return blankCell;\n            }\n            return cell;\n        }),\n    );\n}\n\n/**\n * Перенести current на клетки\n * @param cells\n * @param current\n * @returns {*}\n */\nfunction addCurrentToCells(cells, current) {\n    current.get('matrix').forEach((row, y) => {\n        row.forEach((matrixValue, x) => {\n            if (matrixValue) {\n                const id = shortId.generate();\n\n                cells = cells.setIn(\n                    [y + current.getIn(['offset', 'y']), x + current.getIn(['offset', 'x'])],\n                    new Immutable.Map({\n                        figure: current.get('figure'),\n                        id,\n                    }),\n                );\n            }\n        });\n    });\n\n    return cells;\n}\n\nfunction fillNextList(nextList) {\n    let figuresSet = [];\n    for (let i = 0; i < SHUFFLE_SETS_COUNT; i += 1) {\n        figuresSet = [...figuresSet, ...FIGURES.keySeq().toArray()];\n    }\n    figuresSet = shuffle(figuresSet);\n    figuresSet.forEach(figureKey => {\n        nextList = nextList.push(figureKey);\n    });\n    return nextList;\n}\n\n/**\n * Сгенерировать новый current\n * @param nextList\n * @returns {*[]}\n */\nfunction getNewCurrent(nextList) {\n    if (!nextList) {\n        nextList = new Immutable.List();\n        nextList = fillNextList(nextList);\n    } else if (nextList.size < FIGURES.size * SHUFFLE_SETS_COUNT - 1) {\n        nextList = fillNextList(nextList);\n    }\n\n    // Для дебага выставить фигуры какие нужно в очереди\n    // nextList = new Immutable.List(['I','I','I'])\n\n    const nextListItem = nextList.get(0);\n    nextList = nextList.slice(1);\n\n    const figure = FIGURES.get(nextListItem);\n    const current = new Immutable.Map({\n        figure,\n        offset: new Immutable.Map({\n            y: 0 + figure.getIn(['centerOffset', 0]),\n            x: FIELD_WIDTH / 2 + figure.getIn(['centerOffset', 1]),\n        }),\n        matrix: figure.get('matrix'),\n        id: shortId.generate(),\n    });\n\n    return [current, nextList];\n}\n\n/**\n * Обработать завершенные строки в клетках\n * @param cells\n * @returns {*[]}\n */\nfunction processCompletedRows(cells) {\n    let completedRowsCount = 0;\n\n    let result = generateBlankField();\n\n    for (let y = FIELD_HEIGHT - 1; y >= 0; y -= 1) {\n        let fullRow = true;\n        for (let x = 0; x < FIELD_WIDTH; x += 1) {\n            const cell = cells.getIn([y, x]);\n            fullRow = fullRow && cell.get('figure') !== null;\n        }\n        if (fullRow) {\n            completedRowsCount += 1;\n        } else {\n            result = result.set(y + completedRowsCount, cells.get(y));\n        }\n    }\n\n    return [result, completedRowsCount];\n}\n\n/**\n * Получить current призрак у основания падения\n * @param cells\n * @param current\n * @returns {*|this|this|string[]|Cursor|this|this|this|this}\n */\nfunction getGhost(cells, current) {\n    let ghostCurrent = current;\n    let isOk;\n    let attemptGhostCurrent;\n    do {\n        attemptGhostCurrent = ghostCurrent.setIn(['offset', 'y'], ghostCurrent.getIn(['offset', 'y']) + 1);\n        isOk = !testCurrentToCrash(cells, attemptGhostCurrent);\n\n        if (isOk) {\n            ghostCurrent = attemptGhostCurrent;\n        }\n    } while (isOk);\n\n    return ghostCurrent;\n}\n\n/**\n * Проверить не пора ли фигуре прилипнуть к основанию\n */\nfunction testCurrentToCrash(cells, current) {\n    const offset = current.get('offset');\n\n    let result = false;\n    current.get('matrix').forEach((row, y) => {\n        if (result) {\n            return;\n        }\n        row.forEach((matrixValue, x) => {\n            if (result) {\n                return;\n            }\n\n            if (!matrixValue) {\n                return;\n            }\n\n            // Если фигура зашла за потолок - пусть так и будет\n            if (y + offset.get('y') < 0) {\n                return;\n            }\n\n            const cell = cells.getIn([y + offset.get('y'), x + offset.get('x')]);\n\n            if (!cell) {\n                result = true;\n                return;\n            }\n            if (cell.get('figure') !== null && !cell.get('isCurrent') && !cell.get('isGhost')) {\n                result = true;\n            }\n        });\n    });\n\n    return result;\n}\n\n/**\n * Проверка на побитие нового рекорда\n * @param game\n * @returns {*}\n */\nfunction checkRecord(game) {\n    const personalRecord = game.get('personalRecord');\n    const score = game.get('score');\n\n    if (score > personalRecord) {\n        localStorage.setItem('tetris:record', score);\n        game = game.set('personalRecord', score).set('newRecord', true);\n    }\n\n    return game;\n}\n\n/**\n * Рестартануть игру\n */\nexport function restartGame() {\n    const [current, nextList] = getNewCurrent();\n\n    const cells = generateBlankField();\n\n    const state = new Immutable.Map()\n        .set('totalAdded', 0)\n        .set('score', 0)\n        .set('inGame', true)\n        .set('showIntro', false)\n        .set('pause', false)\n        .set('nextList', nextList)\n        .set('current', current)\n        .set('cells', cells)\n        .set('ghost', getGhost(cells, current))\n        .set('gameOver', false)\n        .set('newRecord', false)\n        .set('personalRecord', localStorage.getItem('tetris:record') || 0);\n\n    return {\n        type: SET_GAME_STATE,\n        state,\n    };\n}\n\n/**\n * Поставить на паузу\n * @param value\n * @returns {{type: string, value: *}}\n */\nexport function pauseGame(value) {\n    return (dispatch, getState) => {\n        let { game } = getState();\n\n        if (game.get('gameOver') || game.get('showIntro')) {\n            return;\n        }\n\n        game = game.set('pause', value).set('inGame', !value);\n\n        return dispatch({\n            type: SET_GAME_STATE,\n            state: game,\n        });\n    };\n}\n\n/**\n * Совершить одну итерацию в игре\n */\nexport function gameTick({ forceDrop = false } = {}) {\n    return (dispatch, getState) => {\n        let { game } = getState();\n\n        if (!game.get('inGame')) {\n            return;\n        }\n\n        let current = game.get('current');\n        let cells = game.get('cells');\n        let score = game.get('score');\n        let nextList = game.get('nextList');\n\n        cells = cleanCells(cells, cell => cell.get('isCurrent') || cell.get('isGhost'));\n\n        const newCurrent = current.setIn(['offset', 'y'], current.getIn(['offset', 'y']) + 1);\n        if (forceDrop) {\n            current = getGhost(cells, current);\n        }\n\n        // Проверяем на готовность прилипнуть\n        if (testCurrentToCrash(cells, newCurrent) || forceDrop) {\n            // Запекаем текущий current\n            cells = addCurrentToCells(cells, current);\n            game = game.set('totalAdded', game.get('totalAdded') + 1);\n\n            // Обрабатываем заполненные строки\n            const [updatedCells, completedRowsCount] = processCompletedRows(cells);\n            cells = updatedCells;\n            if (completedRowsCount === 4) {\n                score += 5;\n            } else {\n                score += completedRowsCount;\n            }\n\n            // Генерим новый current\n            [current, nextList] = getNewCurrent(nextList);\n\n            // Если новая фигура сразу врезается - то гамовер\n            if (testCurrentToCrash(cells, current)) {\n                game = checkRecord(game);\n\n                game = game.set('gameOver', true).set('inGame', false);\n            }\n        } else {\n            // Опускаем вниз\n            current = current.setIn(['offset', 'y'], current.getIn(['offset', 'y']) + 1);\n        }\n\n        game = game\n            .set('current', current)\n            .set('ghost', getGhost(cells, current))\n            .set('cells', cells)\n            .set('score', score)\n            .set('nextList', nextList);\n\n        dispatch({\n            type: SET_GAME_STATE,\n            state: game,\n        });\n    };\n}\n\nexport function moveCurrent(direction) {\n    return (dispatch, getState) => {\n        let { game } = getState();\n\n        if (!game.get('inGame')) {\n            return;\n        }\n\n        let current = game.get('current');\n        let cells = game.get('cells');\n\n        cells = cleanCells(cells, cell => cell.get('isCurrent') || cell.get('isGhost'));\n\n        switch (direction) {\n            case DIRECTION.UP: {\n                current = current.set('matrix', turnOverMatrix(current.get('matrix'))).set('id', shortId.generate());\n                break;\n            }\n            case DIRECTION.RIGHT: {\n                current = current.setIn(['offset', 'x'], current.getIn(['offset', 'x']) + 1);\n                break;\n            }\n            case DIRECTION.DOWN: {\n                break;\n            }\n            case DIRECTION.LEFT: {\n                current = current.setIn(['offset', 'x'], current.getIn(['offset', 'x']) - 1);\n                break;\n            }\n            default:\n        }\n\n        // Если при новых условиях идет столкновение - ничего не делаем\n        if (testCurrentToCrash(cells, current)) {\n            return;\n        }\n\n        game = game\n            .set('current', current)\n            .set('cells', cells)\n            .set('ghost', getGhost(cells, current));\n\n        dispatch({\n            type: SET_GAME_STATE,\n            state: game,\n        });\n    };\n}\n\nexport function setTimeOver() {\n    return (dispatch, getState) => {\n        let { game } = getState();\n\n        game = checkRecord(game);\n\n        game = game\n            .set('gameOver', true)\n            .set('timeOver', true)\n            .set('inGame', false);\n\n        dispatch({\n            type: SET_GAME_STATE,\n            state: game,\n        });\n    };\n}\n","import React from 'react';\nimport { FIELD_HEIGHT, FIELD_WIDTH } from '../../../constants/game';\nimport Cell from '../Cell/Cell';\n\nexport default class CellsBackYard extends React.Component {\n    render() {\n        const cells = [];\n\n        for (let y = 0; y < FIELD_HEIGHT; y += 1) {\n            for (let x = 0; x < FIELD_WIDTH; x += 1) {\n                cells.push(<Cell x={x} y={y} key={`BACK_${y}_${x}`} odd={y % 2 ? !!(x % 2) : !(x % 2)} />);\n            }\n        }\n\n        return <>{cells}</>;\n    }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport createRepeat from '@avinlab/repeat';\nimport cn from 'clsx';\nimport styles from './styles.module.scss';\nimport {\n    CELL_SIZE_PX,\n    DIRECTION,\n    FIELD_HEIGHT,\n    FIELD_WIDTH,\n    KEY_DOWN_REPEAT_TIME,\n    KEY_REPEAT_TIME,\n    TICK_TIME,\n} from '../../../constants/game';\nimport Field from './Field/Field';\nimport LabelScreen from './LabelScreen/LabelScreen';\nimport { gameTick, moveCurrent, pauseGame, restartGame } from '../../../redux/modules/game/actions';\nimport CellsBackYard from '../CellsBackYard/CellsBackYard';\n\nconst IntroScreen = ({ active }) => (\n    <LabelScreen\n        active={active}\n        label={\n            <div>\n                <div style={{ fontSize: 37, color: '#1d1d1d' }} className={styles.cool}>\n                    Tetris Rush\n                </div>\n                <div style={{ fontSize: 25, marginBottom: 40, color: '#293742' }}>\n                    You only have <br /> 5 minutes!\n                </div>\n                <div style={{ fontSize: 30 }}>\n                    Press\n                    <div className={styles.spaceButton}>&lt; SPACE &gt;</div>\n                    to start\n                </div>\n            </div>\n        }\n    />\n);\n\nexport class Board extends React.Component {\n    doGameTick = ({ skip = false, doNotRepeat = false } = {}) => {\n        this.clearGameTickTimeout();\n\n        const { gameTick } = this.props;\n        gameTick();\n\n        if (doNotRepeat) {\n            return;\n        }\n\n        this.gameTickTimeoutId = setTimeout(() => this.doGameTick(), TICK_TIME);\n    };\n\n    clearGameTickTimeout() {\n        if (this.gameTickTimeoutId) {\n            clearTimeout(this.gameTickTimeoutId);\n        }\n    }\n\n    handlePressSpace = e => {\n        const { restartGame, pauseGame, pause, showIntro, gameOver, gameTick } = this.props;\n        if (showIntro || gameOver) {\n            if (!this.freezeSpaceButton) {\n                return restartGame();\n            }\n        }\n        if (pause) {\n            return pauseGame(false);\n        }\n\n        gameTick({ forceDrop: true });\n    };\n\n    handlePressEsc = e => {\n        const { pauseGame, pause } = this.props;\n\n        if (pause) {\n            pauseGame(false);\n        } else {\n            return pauseGame(true);\n        }\n    };\n\n    handleKeyDownDown = () => {\n        this.keyDownPressed = true;\n\n        this.clearGameTickTimeout();\n\n        this.doGameTick({ doNotRepeat: true });\n        this.keyDownPressIntervalId = setInterval(() => {\n            this.doGameTick({ doNotRepeat: true });\n        }, KEY_DOWN_REPEAT_TIME);\n    };\n\n    handleKeyDownUp = () => {\n        this.keyDownPressed = false;\n\n        if (this.keyDownPressIntervalId) {\n            clearInterval(this.keyDownPressIntervalId);\n        }\n        this.doGameTick({ skip: true });\n    };\n\n    componentDidMount() {\n        const { moveCurrent } = this.props;\n        this.keyboardListener = new window.keypress.Listener();\n\n        this.keyboardListener.register_many([\n            {\n                keys: 'space',\n                is_exclusive: true,\n                on_keydown: this.handlePressSpace,\n                prevent_repeat: true,\n            },\n            {\n                keys: 'esc',\n                is_exclusive: true,\n                on_keydown: this.handlePressEsc,\n                prevent_repeat: true,\n            },\n            {\n                keys: 'right',\n                is_exclusive: true,\n                on_keydown: () => {\n                    this.repeatKeyRight = createRepeat({\n                        action: () => {\n                            moveCurrent(DIRECTION.RIGHT);\n                        },\n                        delay: KEY_REPEAT_TIME,\n                        firstTimeDelay: KEY_REPEAT_TIME * 2,\n                    });\n                    this.repeatKeyRight.start();\n                },\n                on_keyup: () => {\n                    if (this.repeatKeyRight) {\n                        this.repeatKeyRight.stop();\n                        this.repeatKeyRight = null;\n                    }\n                },\n                prevent_repeat: true,\n            },\n            {\n                keys: 'left',\n                is_exclusive: true,\n                on_keydown: () => {\n                    this.repeatKeyLeft = createRepeat({\n                        action: () => {\n                            moveCurrent(DIRECTION.LEFT);\n                        },\n                        delay: KEY_REPEAT_TIME,\n                        firstTimeDelay: KEY_REPEAT_TIME * 2,\n                    });\n                    this.repeatKeyLeft.start();\n                },\n                on_keyup: () => {\n                    if (this.repeatKeyLeft) {\n                        this.repeatKeyLeft.stop();\n                    }\n                },\n                prevent_repeat: true,\n            },\n            {\n                keys: 'up',\n                is_exclusive: true,\n                on_keydown: () => {\n                    moveCurrent(DIRECTION.UP);\n                },\n                prevent_repeat: true,\n            },\n            {\n                keys: 'down',\n                is_exclusive: true,\n                on_keydown: this.handleKeyDownDown,\n                on_keyup: this.handleKeyDownUp,\n                prevent_repeat: true,\n            },\n        ]);\n    }\n\n    componentWillUnmount() {\n        this.keyboardListener.reset();\n        this.clearGameTickTimeout();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (!prevProps.inGame && this.props.inGame) {\n            this.doGameTick({ skip: true });\n        }\n\n        if (prevProps.inGame && !this.props.inGame) {\n            this.clearGameTickTimeout();\n        }\n\n        if (!prevProps.gameOver && this.props.gameOver) {\n            // Фризим спейс чтоб случайно сразу не стартануть новую игру\n            this.freezeSpaceButton = true;\n            setTimeout(() => {\n                this.freezeSpaceButton = false;\n            }, 500);\n        }\n\n        if (prevProps.totalAdded !== this.props.totalAdded) {\n            // Отжимаем нажатие вниз\n            if (this.keyDownPressed) {\n                this.handleKeyDownUp();\n            }\n        }\n    }\n\n    render() {\n        const { pause, gameOver, showIntro, timeOver, score, newRecord, personalRecord } = this.props;\n\n        const boardWidth = CELL_SIZE_PX * FIELD_WIDTH;\n        const boardHeight = CELL_SIZE_PX * FIELD_HEIGHT;\n\n        return (\n            <div\n                className={styles.board}\n                style={{\n                    width: boardWidth,\n                    height: boardHeight,\n                }}\n            >\n                <CellsBackYard />\n                {!showIntro && <Field />}\n                <IntroScreen active={showIntro} />\n                <LabelScreen active={pause} label=\"Pause\" blink />\n                <LabelScreen\n                    active={gameOver}\n                    label={\n                        <div>\n                            <div style={{ marginBottom: 20 }}>{timeOver ? 'Time Over' : 'Game Over'}</div>\n                            {newRecord && (\n                                <div className={cn(styles.cool, styles.newRecord)} style={{ fontSize: 30, color: '#293742'  }}>\n                                    NEW RECORD!!\n                                </div>\n                            )}\n                            <div style={{ fontSize: 30 }}>Your score: {score}</div>\n                            <div style={{ fontSize: 20 }}>( Personal record: {personalRecord} )</div>\n                        </div>\n                    }\n                />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        showIntro: state.game.get('showIntro'),\n        pause: state.game.get('pause'),\n        inGame: state.game.get('inGame'),\n        gameOver: state.game.get('gameOver'),\n        timeOver: state.game.get('timeOver'),\n        totalAdded: state.game.get('totalAdded'),\n        score: state.game.get('score'),\n        personalRecord: state.game.get('personalRecord'),\n        newRecord: state.game.get('newRecord'),\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    {\n        restartGame,\n        gameTick,\n        pauseGame,\n        moveCurrent,\n    },\n)(Board);\n","import * as Immutable from 'immutable';\n\n/**\n * Перевернуть матрицу\n * @param matrix\n * @param reverse\n * @returns {List}\n */\n// eslint-disable-next-line sonarjs/cognitive-complexity\nexport function turnOverMatrix(matrix, reverse = false) {\n    let result = new Immutable.List();\n\n    if (reverse) {\n        for (let y = 0; y < matrix.size; y += 1) {\n            for (let x = matrix.get(0).size - 1; x >= 0; x -= 1) {\n                if (!result.get(matrix.get(0).size - 1 - x)) {\n                    result = result.set(matrix.get(0).size - 1 - x, new Immutable.List());\n                }\n                result = result.setIn([matrix.get(0).size - 1 - x, y], matrix.getIn([y, x]));\n            }\n        }\n    } else {\n        for (let y = matrix.size - 1; y >= 0; y -= 1) {\n            for (let x = 0; x < matrix.get(0).size; x += 1) {\n                if (!result.get(x)) {\n                    result = result.set(x, new Immutable.List());\n                }\n                result = result.setIn([x, matrix.size - 1 - y], matrix.getIn([y, x]));\n            }\n        }\n    }\n\n    return result;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './styles.module.scss';\nimport { CELL_SIZE_PX, FIGURES } from '../../../../constants/game';\nimport Cell from '../../Cell/Cell';\n\nexport default class NextFigure extends React.Component {\n    static propTypes = {\n        nextItemKey: PropTypes.string,\n    };\n\n    getContainerWidth() {\n        const { nextItemKey } = this.props;\n        const figure = FIGURES.get(nextItemKey);\n\n        return figure.getIn(['matrix', 0]).size * CELL_SIZE_PX;\n    }\n\n    getContainerHeight() {\n        const { nextItemKey } = this.props;\n        const figure = FIGURES.get(nextItemKey);\n\n        return Math.min(figure.getIn(['matrix']).size * CELL_SIZE_PX, 60);\n    }\n\n    renderCells() {\n        const { nextItemKey } = this.props;\n        const figure = FIGURES.get(nextItemKey);\n\n        const resultCells = [];\n        figure.get('matrix').forEach((row, y) => {\n            row.forEach((matrixValue, x) => {\n                if (matrixValue) {\n                    resultCells.push(<Cell figure={figure} baked x={x} y={y} key={`${y}_${x}`} />);\n                }\n            });\n        });\n\n        return resultCells;\n    }\n\n    render() {\n        const { nextItemKey } = this.props;\n        if (!nextItemKey) {\n            return null;\n        }\n\n        const height = this.getContainerHeight();\n        const width = this.getContainerWidth();\n\n        return (\n            <div className={styles.container} style={{ width, height, paddingTop: height < 60 ? 10 : undefined }}>\n                <div className={styles.inner}>{this.renderCells()}</div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport cn from 'clsx';\nimport styles from './styles.module.scss';\nimport NextFigure from './NextFigure/NextFigure';\n\nexport class NextBar extends React.Component {\n    render() {\n        const { nextList } = this.props;\n        const visible = !!nextList;\n\n        return (\n            <div className={cn(styles.bar, { [styles.visible]: visible })}>\n                <div className={styles.title}>NEXT</div>\n                <div className={styles.figures}>\n                    <NextFigure nextItemKey={nextList && nextList.get(0)} />\n                    <NextFigure nextItemKey={nextList && nextList.get(1)} />\n                    <NextFigure nextItemKey={nextList && nextList.get(2)} />\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        nextList: state.game.get('nextList'),\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    {},\n)(NextBar);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport cn from 'clsx';\nimport FlashChange from '@avinlab/react-flash-change';\nimport styles from './styles.module.scss';\n\nexport class ScoreBar extends React.Component {\n    render() {\n        const { score, showIntro } = this.props;\n        const visible = !showIntro;\n\n        return (\n            <div className={cn(styles.bar, { [styles.visible]: visible })}>\n                <div className={styles.title}>SCORE</div>\n\n                <FlashChange\n                    value={score}\n                    flashDuration={200}\n                    className={styles.score}\n                    compare={(prevProps, nextProps) => {\n                        if (nextProps.value - prevProps.value === 5) {\n                            return styles.superFlashScore;\n                        }\n                        if (nextProps.value > prevProps.value) {\n                            return styles.flashScore;\n                        }\n                        return false;\n                    }}\n                >\n                    {score}\n                </FlashChange>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        showIntro: state.game.get('showIntro'),\n        score: state.game.get('score'),\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    {},\n)(ScoreBar);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport cn from 'clsx';\nimport { GAME_TIME } from '../../../constants/game';\nimport styles from './styles.module.scss';\nimport { setTimeOver } from '../../../redux/modules/game/actions';\n\nexport class GameTimer extends React.Component {\n    state = {\n        time: null,\n    };\n\n    timerId = null;\n\n    tick = () => {\n        const timeDiff = 200;\n\n        this.setState(state => ({\n            time: state.time - timeDiff,\n        }));\n        if (this.state.time <= 0) {\n            this.timeOver();\n        } else {\n            this.timerId = setTimeout(this.tick, timeDiff);\n        }\n    };\n\n    timeOver() {\n        const { setTimeOver } = this.props;\n\n        this.pause();\n        setTimeOver();\n    }\n\n    restartTimer() {\n        this.setState(\n            {\n                time: GAME_TIME,\n            },\n            () => {\n                this.tick();\n            },\n        );\n    }\n\n    pause() {\n        if (this.timerId) {\n            clearTimeout(this.timerId);\n        }\n    }\n\n    resume() {\n        this.tick();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if ((prevProps.gameOver && !this.props.gameOver) || (prevProps.showIntro && !this.props.showIntro)) {\n            this.restartTimer();\n        }\n\n        if (!prevProps.pause && this.props.pause) {\n            this.pause();\n        }\n\n        if (prevProps.pause && !this.props.pause) {\n            this.resume();\n        }\n    }\n\n    render() {\n        const { nextList, timeOver, gameOver } = this.props;\n        const { time } = this.state;\n        const visible = !!nextList && !timeOver && !gameOver;\n\n        const widthPercent = (time / GAME_TIME) * 100;\n\n        return (\n            <div className={cn(styles.timerBar, { [styles.visible]: visible })}>\n                <div\n                    className={cn(styles.tracker, {\n                        [styles.okTracker]: widthPercent >= 50,\n                        [styles.warningTracker]: widthPercent >= 20 && widthPercent < 50,\n                        [styles.dangerTracker]: widthPercent < 20 && widthPercent > 0,\n                        [styles.noTracker]: widthPercent === 0,\n                    })}\n                    style={{ width: `${widthPercent}%` }}\n                />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        showIntro: state.game.get('showIntro'),\n        gameOver: state.game.get('gameOver'),\n        pause: state.game.get('pause'),\n        nextList: state.game.get('nextList'),\n        timeOver: state.game.get('timeOver'),\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    {\n        setTimeOver,\n    },\n)(GameTimer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport styles from './styles.module.scss';\nimport Board from './Board/Board';\nimport NextBar from './NextBar/NextBar';\nimport ScoreBar from './ScoreBar/ScoreBar';\nimport GameTimer from './GameTimer/GameTimer';\n\nexport class Game extends React.Component {\n    render() {\n        return (\n            <div className={styles.game}>\n                <Board />\n                <NextBar />\n                <ScoreBar />\n                <GameTimer />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {};\n}\n\nexport default connect(\n    mapStateToProps,\n    {},\n)(Game);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport Game from '../Game/Game';\n\nexport default class Root extends React.Component {\n    render() {\n        const { store } = this.props;\n        return (\n            <Provider store={store}>\n                <div className=\"filler\">\n                    <Game />\n                </div>\n            </Provider>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport configureStore from './redux/store';\nimport Root from './components/Root/Root';\nimport './styles/index.scss';\nimport * as serviceWorker from './serviceWorker';\n\n// Инициализирует redux-store\nconst store = configureStore();\n\n// Монтируем React контейнер на страницу\nconst target = document.querySelector('#root');\nReactDOM.render(<Root store={store} />, target);\n\nif (module.hot) {\n    module.hot.accept('./components/Root/Root', () => {\n        ReactDOM.render(<Root store={store} />, target);\n    });\n}\n\nserviceWorker.unregister();\n","export function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"styles_bar__2weV-\",\"title\":\"styles_title__12PMP\",\"timerBar\":\"styles_timerBar__CDYn9\",\"visible\":\"styles_visible__3nHNn\",\"tracker\":\"styles_tracker__2pfef\",\"okTracker\":\"styles_okTracker__bwqOc\",\"warningTracker\":\"styles_warningTracker__3M5E5\",\"dangerTracker\":\"styles_dangerTracker__3E578\",\"noTracker\":\"styles_noTracker__3WrUE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"styles_bar__2VB9L\",\"title\":\"styles_title__39oQB\",\"visible\":\"styles_visible__3UFQk\",\"score\":\"styles_score__1wFnR\",\"flashScore\":\"styles_flashScore__3J2Qa\",\"flashScoreAnimation\":\"styles_flashScoreAnimation__20CQ6\",\"superFlashScore\":\"styles_superFlashScore__v3gEQ\",\"superFlashScoreAnimation\":\"styles_superFlashScoreAnimation__1mhdv\",\"figures\":\"styles_figures__kqRWs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"styles_board__1R2hD\",\"cool\":\"styles_cool__1JBGc\",\"logoAnimation\":\"styles_logoAnimation__3JCo8\",\"spaceButton\":\"styles_spaceButton__2TMq8\",\"spaceButtonAnimation\":\"styles_spaceButtonAnimation__31qFZ\",\"newRecord\":\"styles_newRecord__3-_JN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"styles_bar__1_S-Q\",\"title\":\"styles_title__1rUze\",\"visible\":\"styles_visible__1DPfR\",\"figures\":\"styles_figures__1i6mT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screen\":\"styles_screen__1t1Ad\",\"screenAppear\":\"styles_screenAppear__2i-jO\",\"label\":\"styles_label__106Fs\",\"blink\":\"styles_blink__1-Qsi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__29a_9\",\"inner\":\"styles_inner__1y4ie\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"game\":\"styles_game__3OTW0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"styles_field__3RTgI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"styles_cell__1xdzv\",\"figureI\":\"styles_figureI__2_a1J\",\"figureJ\":\"styles_figureJ__1BDNe\",\"figureL\":\"styles_figureL__3nDLe\",\"figureO\":\"styles_figureO__3l3lg\",\"figureS\":\"styles_figureS__3AsqA\",\"figureT\":\"styles_figureT__-HoM5\",\"figureZ\":\"styles_figureZ__3bE37\",\"blankCell\":\"styles_blankCell__N73wL\",\"ghost\":\"styles_ghost__3nl9Y\",\"odd\":\"styles_odd__1s2Ra\",\"bakedCell\":\"styles_bakedCell__2Choh\",\"current\":\"styles_current__2UsXL\"};"],"sourceRoot":""}